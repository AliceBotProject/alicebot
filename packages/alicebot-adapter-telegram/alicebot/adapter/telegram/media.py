"""Telegram Media 模型。"""
# autogenerated by codegen.py, do not edit manually.
# ruff: noqa: D101
# pylint: disable=missing-class-docstring

from pydantic import BaseModel

from .message import TelegramMessage
from .model import (
    InputFile,
    InputMediaAudio,
    InputMediaDocument,
    InputMediaPhoto,
    InputMediaVideo,
    InputPaidMedia,
    InputPollOption,
    LabeledPrice,
)


class TelegramMedia(BaseModel):
    pass


class Photo(TelegramMedia):
    photo: InputFile | str
    caption: None | str | TelegramMessage = None
    show_caption_above_media: bool | None = None
    has_spoiler: bool | None = None
    allow_paid_broadcast: bool | None = None


class Audio(TelegramMedia):
    audio: InputFile | str
    caption: None | str | TelegramMessage = None
    duration: int | None = None
    performer: str | None = None
    title: str | None = None
    thumbnail: InputFile | str | None = None
    allow_paid_broadcast: bool | None = None


class Document(TelegramMedia):
    document: InputFile | str
    thumbnail: InputFile | str | None = None
    caption: None | str | TelegramMessage = None
    disable_content_type_detection: bool | None = None
    allow_paid_broadcast: bool | None = None


class Video(TelegramMedia):
    video: InputFile | str
    duration: int | None = None
    width: int | None = None
    height: int | None = None
    thumbnail: InputFile | str | None = None
    cover: InputFile | str | None = None
    start_timestamp: int | None = None
    caption: None | str | TelegramMessage = None
    show_caption_above_media: bool | None = None
    has_spoiler: bool | None = None
    supports_streaming: bool | None = None
    allow_paid_broadcast: bool | None = None


class Animation(TelegramMedia):
    animation: InputFile | str
    duration: int | None = None
    width: int | None = None
    height: int | None = None
    thumbnail: InputFile | str | None = None
    caption: None | str | TelegramMessage = None
    show_caption_above_media: bool | None = None
    has_spoiler: bool | None = None
    allow_paid_broadcast: bool | None = None


class Voice(TelegramMedia):
    voice: InputFile | str
    caption: None | str | TelegramMessage = None
    duration: int | None = None
    allow_paid_broadcast: bool | None = None


class VideoNote(TelegramMedia):
    video_note: InputFile | str
    duration: int | None = None
    length: int | None = None
    thumbnail: InputFile | str | None = None
    allow_paid_broadcast: bool | None = None


class PaidMedia(TelegramMedia):
    star_count: int
    media: list[InputPaidMedia]
    payload: str | None = None
    caption: None | str | TelegramMessage = None
    show_caption_above_media: bool | None = None
    allow_paid_broadcast: bool | None = None


class MediaGroup(TelegramMedia):
    media: (
        list[InputMediaAudio]
        | list[InputMediaDocument]
        | list[InputMediaPhoto]
        | list[InputMediaVideo]
    )
    allow_paid_broadcast: bool | None = None


class Location(TelegramMedia):
    latitude: float
    longitude: float
    horizontal_accuracy: float | None = None
    live_period: int | None = None
    heading: int | None = None
    proximity_alert_radius: int | None = None
    allow_paid_broadcast: bool | None = None


class Venue(TelegramMedia):
    latitude: float
    longitude: float
    title: str
    address: str
    foursquare_id: str | None = None
    foursquare_type: str | None = None
    google_place_id: str | None = None
    google_place_type: str | None = None
    allow_paid_broadcast: bool | None = None


class Contact(TelegramMedia):
    phone_number: str
    first_name: str
    last_name: str | None = None
    vcard: str | None = None
    allow_paid_broadcast: bool | None = None


class Poll(TelegramMedia):
    question: None | str | TelegramMessage = None
    options: list[InputPollOption]
    is_anonymous: bool | None = None
    type: str | None = None
    allows_multiple_answers: bool | None = None
    correct_option_id: int | None = None
    explanation: None | str | TelegramMessage = None
    open_period: int | None = None
    close_date: int | None = None
    is_closed: bool | None = None
    allow_paid_broadcast: bool | None = None


class Dice(TelegramMedia):
    emoji: str | None = None
    allow_paid_broadcast: bool | None = None


class ChatAction(TelegramMedia):
    action: str


class Gift(TelegramMedia):
    user_id: int | None = None
    gift_id: str
    pay_for_upgrade: bool | None = None
    text: None | str | TelegramMessage = None


class Sticker(TelegramMedia):
    sticker: InputFile | str
    emoji: str | None = None
    allow_paid_broadcast: bool | None = None


class Invoice(TelegramMedia):
    title: str
    description: str
    payload: str
    provider_token: str | None = None
    currency: str
    prices: list[LabeledPrice]
    max_tip_amount: int | None = None
    suggested_tip_amounts: list[int] | None = None
    start_parameter: str | None = None
    provider_data: str | None = None
    photo_url: str | None = None
    photo_size: int | None = None
    photo_width: int | None = None
    photo_height: int | None = None
    need_name: bool | None = None
    need_phone_number: bool | None = None
    need_email: bool | None = None
    need_shipping_address: bool | None = None
    send_phone_number_to_provider: bool | None = None
    send_email_to_provider: bool | None = None
    is_flexible: bool | None = None
    allow_paid_broadcast: bool | None = None


class Game(TelegramMedia):
    game_short_name: str
    allow_paid_broadcast: bool | None = None
