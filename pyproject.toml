[project]
name = "alicebot"
version = "0.10.0"
description = "A simply asynchronous python chatbot framework."
authors = [{ name = "st1020", email = "stone_1020@qq.com" }]
license = { text = "MIT" }
readme = "README.md"
keywords = ["bot", "chatbot", "qq", "qqbot", "cqhttp", "coolq"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Framework :: AsyncIO",
    "Framework :: Robot Framework",
    "Framework :: Robot Framework :: Library",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Topic :: Communications :: Chat",
]
requires-python = ">=3.8"
dependencies = [
    "tomli>=2.0.0,<3.0.0;python_version<'3.11'",
    "pydantic>=2.0.3,<3.0.0",
    "aiohttp>=3.8.0,<4.0.0",
    "structlog>=24.1.0,<25.0.0",
    "rich>=13.7.0,<14.0.0",
    "typing-extensions>=4.5.0",
]

[project.optional-dependencies]
cqhttp = ["alicebot-adapter-cqhttp"]
onebot = ["alicebot-adapter-onebot"]
mirai = ["alicebot-adapter-mirai"]
dingtalk = ["alicebot-adapter-dingtalk"]
apscheduler = ["alicebot-adapter-apscheduler"]
hot_reload = ["watchfiles"]
all = [
    "alicebot-adapter-cqhttp",
    "alicebot-adapter-onebot",
    "alicebot-adapter-mirai",
    "alicebot-adapter-dingtalk",
    "alicebot-adapter-apscheduler",
    "watchfiles",
]

[tool.pdm.dev-dependencies]
dev = [
    "-e alicebot-adapter-cqhttp @ file:///${PROJECT_ROOT}/packages/alicebot-adapter-cqhttp",
    "-e alicebot-adapter-onebot @ file:///${PROJECT_ROOT}/packages/alicebot-adapter-onebot",
    "-e alicebot-adapter-mirai @ file:///${PROJECT_ROOT}/packages/alicebot-adapter-mirai",
    "-e alicebot-adapter-dingtalk @ file:///${PROJECT_ROOT}/packages/alicebot-adapter-dingtalk",
    "-e alicebot-adapter-apscheduler @ file:///${PROJECT_ROOT}/packages/alicebot-adapter-apscheduler",
]
typing = [ # used only in type check
    "tomli",
    "watchfiles",
    "trio>=0.22.2", # watchfiles used this lib
]
lint = ["ruff", "mypy", "pylint", "pylint-pydantic"]
docs = ["sophia-doc~=0.1.4", "tomlkit"]
test = ["pytest", "pytest-asyncio", "pytest-xdist", "pytest-cov"]

[project.urls]
Homepage = "https://docs.alicebot.dev/"
Documentation = "https://docs.alicebot.dev/"
Repository = "https://github.com/AliceBotProject/alicebot"
Changelog = "https://docs.alicebot.dev/changelog.html"

[tool.ruff]
line-length = 88
target-version = "py38"

[tool.ruff.lint]
select = ["ALL"]
ignore = [
    "C90",     # mccabe
    "FBT",     # flake8-boolean-trap
    "COM",     # flake8-commas
    "EM",      # flake8-errmsg
    "ISC",     # flake8-implicit-str-concat
    "INP",     # flake8-no-pep420
    "TID",     # flake8-tidy-imports
    "E501",    # Line too long, handled by formatter
    "D415",    # First line should end with a period, question mark, or exclamation point
    "ANN401",  # Dynamically typed expressions (typing.Any) are disallowed
    "S101",    # Use of assert detected
    "PGH003",  # Use specific rule codes when ignoring type issues
    "PLR0912", # Too many branches
    "PLR0913", # Too many arguments to function call
    "TRY003",  # Avoid specifying long messages outside the exception class
    "PERF203", # try-except within a loop incurs performance overhead
]
allowed-confusables = ["，", "：", "！"]

[tool.ruff.lint.flake8-builtins]
builtins-ignorelist = ["id", "type"]

[tool.ruff.lint.isort]
known-third-party = ["pydantic", "aiohttp", "structlog"]
extra-standard-library = ["typing_extensions"]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.pyflakes]
extend-generics = [
    "alicebot.plugin.Plugin",
    "alicebot.adapter.Adapter",
    "alicebot.event.Event",
    "alicebot.event.MessageEvent",
    "alicebot.message.Message",
    "alicebot.message.MessageSegment",
]

[tool.ruff.lint.pyupgrade]
keep-runtime-typing = true

[tool.ruff.lint.per-file-ignores]
"packages/*/alicebot/__init__.py" = ["D104"]
"packages/*/alicebot/adapter/__init__.py" = ["D104"]
"examples/plugins/*.py" = ["D", "T", "ANN"]
"tests/*.py" = ["D", "PLR2004"]

[tool.pyright]
ignore = ["examples/plugins"]
extraPaths = ["tests", "tests/test_utils"]
pythonVersion = "3.8"
pythonPlatform = "All"
typeCheckingMode = "strict"
reportMissingTypeStubs = false
reportUnknownArgumentType = false
reportUnknownMemberType = false
reportUnnecessaryIsInstance = false
reportCallInDefaultInitializer = true
reportPropertyTypeMismatch = true
reportShadowedImports = true
reportUninitializedInstanceVariable = true

[tool.mypy]
python_version = "3.8"
strict = true
exclude = [
    '^packages/.*/alicebot/__init__\.py$',
    '^packages/.*/alicebot/adapter/__init__\.py$',
    '^examples/.*\.py$',
]
warn_return_any = false

[[tool.mypy.overrides]]
module = "apscheduler.*"
ignore_missing_imports = true

[tool.pylint.main]
disable = [
    "arguments-differ",
    "broad-exception-caught",
    "import-outside-toplevel",
    "line-too-long",
    "too-many-lines",
    "duplicate-code",
    "too-few-public-methods",
    "too-many-arguments",
    "too-many-boolean-expressions",
    "too-many-branches",
    "too-many-instance-attributes",
    "too-many-nested-blocks",
    "too-many-public-methods",
]
load-plugins = ["pylint_pydantic"]
source-roots = ["."]

[tool.pylint.variables]
allowed-redefined-builtins = ["id", "type"]

[tool.pytest.ini_options]
log_cli = true
testpaths = "tests"
addopts = "--cov=alicebot --cov-report=term-missing"

[tool.coverage.run]
omit = ["alicebot/adapter/utils.py"]

[tool.coverage.report]
exclude_also = [
    "raise NotImplementedError",
    "if TYPE_CHECKING:",
    "@overload",
    "@(abc\\.)?abstractmethod",
]
omit = ["alicebot/log.py"]

[build-system]
requires = ["pdm-backend"]
build-backend = "pdm.backend"
